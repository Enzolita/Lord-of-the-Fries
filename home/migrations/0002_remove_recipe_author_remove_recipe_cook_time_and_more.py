# Generated by Django 4.2.14 on 2024-08-14 09:54

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("home", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="recipe",
            name="author",
        ),
        migrations.RemoveField(
            model_name="recipe",
            name="cook_time",
        ),
        migrations.RemoveField(
            model_name="recipe",
            name="description",
        ),
        migrations.RemoveField(
            model_name="recipe",
            name="ingredients",
        ),
        migrations.RemoveField(
            model_name="recipe",
            name="prep_time",
        ),
        migrations.RemoveField(
            model_name="recipe",
            name="servings",
        ),
        migrations.RemoveField(
            model_name="recipe",
            name="total_time",
        ),
        migrations.AddField(
            model_name="recipe",
            name="estimated_time",
            field=models.IntegerField(default=0, verbose_name="Estimated time"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recipe",
            name="featured_image",
            field=cloudinary.models.CloudinaryField(
                default="placeholder", max_length=255, verbose_name="image"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="likes",
            field=models.ManyToManyField(
                blank=True, related_name="recipe_like", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="tag",
            field=models.CharField(
                choices=[("recipe", "Recipe")], default="recipe", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="recipe",
            name="slug",
            field=models.SlugField(
                default=django.utils.timezone.now, max_length=200, unique=True
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="recipe",
            name="status",
            field=models.IntegerField(
                choices=[("unpublished", "Unpublished")], default="unpublished"
            ),
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ingredient", models.CharField(max_length=200)),
                ("unit", models.CharField(max_length=200)),
                ("amount", models.IntegerField()),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.recipe"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Pending"), (1, "Approved"), (2, "Rejected")],
                        default=0,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="home.recipe",
                    ),
                ),
            ],
            options={
                "ordering": ["created_on"],
            },
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=200, null=True, unique=True
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="author_pictures/"
                    ),
                ),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "social_links",
                    models.JSONField(
                        blank=True,
                        help_text="Social media links in JSON format",
                        null=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Inactive"), (1, "Active")], default=1
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_on"],
            },
        ),
    ]
